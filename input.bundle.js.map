{"version":3,"file":"input.bundle.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AASA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;ACfA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GA;;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AAGA;AACA;;AACA;AACA;AAEA;;AACA;AACA;AAEA;;AACA;AACA;AAEA;;AACA;AACA;AAEA;;AACA;AACA;AAcA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AAGA;AAEA;AAKA;AACA;AAAA;AAEA;AACA;AACA;AAIA;AACA;AAEA;AAKA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AAEA;AAIA;AACA;;;;;;;;;;;;;;;ACxSA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AAEA;AACA;;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;AC5DA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AAEA;AAYA;;AAKA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AAOA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClTA;AAWA;AACA;AACA;;;;;;;;;;;AAWA;AACA;AACA;AAEA;AAIA;;AACA;AAJA;AAMA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAMA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;ACtJA;AAGA;AACA;AACA;;;;;;;AAOA;AAEA;AACA;AAMA;AAIA;;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA","sources":["webpack://websocket_test/./src/css/window.css","webpack://websocket_test/./src/tools/input/input.css","webpack://websocket_test/./node_modules/css-loader/dist/runtime/api.js","webpack://websocket_test/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://websocket_test/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://websocket_test/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://websocket_test/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://websocket_test/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://websocket_test/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://websocket_test/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://websocket_test/./src/css/window.css?b38f","webpack://websocket_test/./src/tools/input/input.css?5fd4","webpack://websocket_test/./src/tools/input/db.ts","webpack://websocket_test/./src/ts/helper/fade.ts","webpack://websocket_test/./src/ts/libs/base64.ts","webpack://websocket_test/./src/ts/libs/binary-dump.ts","webpack://websocket_test/./src/ts/web-components/alert-message/alert-message.ts","webpack://websocket_test/./src/ts/web-components/binary-dump/binary-dump.ts","webpack://websocket_test/./src/ts/web-components/binary-input/text-binary.ts","webpack://websocket_test/./src/ts/web-components/binary-input/text-select-binary.ts","webpack://websocket_test/webpack/bootstrap","webpack://websocket_test/webpack/runtime/compat get default export","webpack://websocket_test/webpack/runtime/define property getters","webpack://websocket_test/webpack/runtime/hasOwnProperty shorthand","webpack://websocket_test/webpack/runtime/make namespace object","webpack://websocket_test/webpack/runtime/nonce","webpack://websocket_test/./src/tools/input/input.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.window {\\n  background-color: white;\\n  margin: 0px;\\n  padding: 0px;\\n  box-shadow: 3px 2px 2px black;\\n  border: 1px black solid;\\n  border-radius: 5px;\\n}\\n\\n.window-header {\\n  background-color: blue;\\n  font-weight: bold;\\n  width: 100%;\\n  text-align: center;\\n  padding: 3px 0px;\\n  border-top-left-radius: 4px;\\n}\\n\\n.window-body {\\n  border-bottom-right-radius: 4px;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/window.css\"],\"names\":[],\"mappings\":\";AACA;EACE,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,6BAA6B;EAC7B,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;EACtB,iBAAiB;EACjB,WAAW;EACX,kBAAkB;EAClB,gBAAgB;EAChB,2BAA2B;AAC7B;;AAEA;EACE,+BAA+B;AACjC\",\"sourcesContent\":[\"\\n.window {\\n  background-color: white;\\n  margin: 0px;\\n  padding: 0px;\\n  box-shadow: 3px 2px 2px black;\\n  border: 1px black solid;\\n  border-radius: 5px;\\n}\\n\\n.window-header {\\n  background-color: blue;\\n  font-weight: bold;\\n  width: 100%;\\n  text-align: center;\\n  padding: 3px 0px;\\n  border-top-left-radius: 4px;\\n}\\n\\n.window-body {\\n  border-bottom-right-radius: 4px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html,\\nbody {\\n  height: 100%;\\n  width: 100%;\\n  margin: 0;\\n  padding: 0;\\n  overflow: hidden;\\n}\\n\\n#header {\\n  display: flex;\\n  width: 100%;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n#options {\\n  width: fit-content;\\n}\\n\\n#share {\\n  font-size: xx-large;\\n  cursor: pointer;\\n}\\n\\n#share:hover {\\n  background-color: black;\\n  color: white;\\n}\\n\\n.link {\\n  cursor: text;\\n  width: 500px;\\n}\\n\\n.copy {\\n  padding: 2px;\\n  cursor: pointer;\\n}\\n\\n.copy:hover {\\n  background-color: black;\\n  color: white;\\n}\\n\\n#input-binary {\\n  width: 50%;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/tools/input/input.css\"],\"names\":[],\"mappings\":\"AAAA;;EAEE,YAAY;EACZ,WAAW;EACX,SAAS;EACT,UAAU;EACV,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,uBAAuB;EACvB,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,uBAAuB;EACvB,YAAY;AACd;;AAEA;EACE,UAAU;AACZ\",\"sourcesContent\":[\"html,\\nbody {\\n  height: 100%;\\n  width: 100%;\\n  margin: 0;\\n  padding: 0;\\n  overflow: hidden;\\n}\\n\\n#header {\\n  display: flex;\\n  width: 100%;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n#options {\\n  width: fit-content;\\n}\\n\\n#share {\\n  font-size: xx-large;\\n  cursor: pointer;\\n}\\n\\n#share:hover {\\n  background-color: black;\\n  color: white;\\n}\\n\\n.link {\\n  cursor: text;\\n  width: 500px;\\n}\\n\\n.copy {\\n  padding: 2px;\\n  cursor: pointer;\\n}\\n\\n.copy:hover {\\n  background-color: black;\\n  color: white;\\n}\\n\\n#input-binary {\\n  width: 50%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./window.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./window.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./input.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./input.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import type { Encoding } from '../../ts/libs/binary-dump';\n\nconst dbName = 'input-binary';\nconst dbVersion = 1;\nconst objectStoreName = 'binary-data';\n\ninterface InputData {\n  breakline: number;\n  hide: Encoding[];\n  data: Uint8Array;\n  encode: Encoding;\n}\n\nexport async function open_db(): Promise<IDBDatabase> {\n  return await new Promise(function (resolve, reject) {\n    const openRequest = window.indexedDB.open(dbName, dbVersion);\n    openRequest.onerror = ev => {\n      reject(ev);\n    };\n\n    openRequest.onsuccess = ev => {\n      resolve((ev.target as IDBOpenDBRequest).result);\n    };\n\n    openRequest.onupgradeneeded = ev => {\n      const db: IDBDatabase = (ev.target as IDBOpenDBRequest).result;\n      const store = db.createObjectStore(objectStoreName);\n      store.transaction.oncomplete = () => {};\n    };\n  });\n}\n\nexport async function read_db(db: IDBDatabase): Promise<InputData> {\n  return await new Promise(function (resolve, reject) {\n    const request = db\n      .transaction(objectStoreName, 'readonly')\n      .objectStore(objectStoreName)\n      .get('data');\n    request.onsuccess = ev => {\n      resolve((ev.target as IDBRequest).result);\n    };\n    request.onerror = ev => {\n      reject(ev);\n    };\n  });\n}\n\nexport async function write_db(\n  db: IDBDatabase,\n  data: InputData\n): Promise<void> {\n  await new Promise<void>(function (resolve, reject) {\n    const request = db\n      .transaction(objectStoreName, 'readwrite')\n      .objectStore(objectStoreName)\n      .put(data, 'data');\n    request.onsuccess = () => {\n      resolve();\n    };\n    request.onerror = ev => {\n      reject(ev);\n    };\n  });\n}\n","export async function fade_out<T>(el: T, pace: number = 0.005): Promise<T> {\n  if (!(el instanceof HTMLElement)) throw new Error('Wrong type');\n  return await new Promise(function (resolve) {\n    el.style.opacity = '1';\n\n    (function fade() {\n      const opacity = parseFloat(el.style.opacity) - pace;\n      el.style.opacity = `${opacity}`;\n      if (opacity <= 0) {\n        resolve(el);\n      } else {\n        requestAnimationFrame(fade);\n      }\n    })();\n  });\n}\n","/**\n * @see https://developer.mozilla.org/en-US/docs/Glossary/Base64\n */\n\n// Array of bytes to Base64 string decoding\nfunction b64_to_uint6(nChr: number): number {\n  return nChr > 64 && nChr < 91\n    ? nChr - 65\n    : nChr > 96 && nChr < 123\n    ? nChr - 71\n    : nChr > 47 && nChr < 58\n    ? nChr + 4\n    : nChr === 43\n    ? 62\n    : nChr === 47\n    ? 63\n    : 0;\n}\n\nexport function base64_decode(\n  sBase64: string,\n  nBlocksSize: number = 0\n): Uint8Array {\n  const sB64Enc = sBase64.replace(/[^A-Za-z0-9+/]/g, ''); // Remove any non-base64 characters, such as trailing \"=\", whitespace, and more.\n  const nInLen = sB64Enc.length;\n  const nOutLen =\n    nBlocksSize !== 0\n      ? Math.ceil(((nInLen * 3 + 1) >> 2) / nBlocksSize) * nBlocksSize\n      : (nInLen * 3 + 1) >> 2;\n  const taBytes = new Uint8Array(nOutLen);\n\n  let nMod3;\n  let nMod4;\n  let nUint24 = 0;\n  let nOutIdx = 0;\n  for (let nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n    nMod4 = nInIdx & 3;\n    nUint24 |= b64_to_uint6(sB64Enc.charCodeAt(nInIdx)) << (6 * (3 - nMod4));\n    if (nMod4 === 3 || nInLen - nInIdx === 1) {\n      nMod3 = 0;\n      while (nMod3 < 3 && nOutIdx < nOutLen) {\n        taBytes[nOutIdx] = (nUint24 >>> ((16 >>> nMod3) & 24)) & 255;\n        nMod3++;\n        nOutIdx++;\n      }\n      nUint24 = 0;\n    }\n  }\n\n  return taBytes;\n}\n\n/* Base64 string to array encoding */\nfunction uint6_to_b64(nUint6: number): number {\n  return nUint6 < 26\n    ? nUint6 + 65\n    : nUint6 < 52\n    ? nUint6 + 71\n    : nUint6 < 62\n    ? nUint6 - 4\n    : nUint6 === 62\n    ? 43\n    : nUint6 === 63\n    ? 47\n    : 65;\n}\n\nexport function base64_encode(aBytes: Uint8Array): string {\n  let nMod3 = 2;\n  let sB64Enc = '';\n\n  const nLen = aBytes.length;\n  let nUint24 = 0;\n  for (let nIdx = 0; nIdx < nLen; nIdx++) {\n    nMod3 = nIdx % 3;\n    // To break your base64 into several 80-character lines, add:\n    //   if (nIdx > 0 && ((nIdx * 4) / 3) % 76 === 0) {\n    //      sB64Enc += \"\\r\\n\";\n    //    }\n\n    nUint24 |= aBytes[nIdx] << ((16 >>> nMod3) & 24);\n    if (nMod3 === 2 || aBytes.length - nIdx === 1) {\n      sB64Enc += String.fromCodePoint(\n        uint6_to_b64((nUint24 >>> 18) & 63),\n        uint6_to_b64((nUint24 >>> 12) & 63),\n        uint6_to_b64((nUint24 >>> 6) & 63),\n        uint6_to_b64(nUint24 & 63)\n      );\n      nUint24 = 0;\n    }\n  }\n  return (\n    sB64Enc.substring(0, sB64Enc.length - 2 + nMod3) +\n    (nMod3 === 2 ? '' : nMod3 === 1 ? '=' : '==')\n  );\n}\n\nexport function base64_encode_string(aBytes: string): string {\n  return base64_encode(\n    Uint8Array.from(Array.from(aBytes).map(c => c.charCodeAt(0)))\n  );\n}\n\nexport function base64_encode2(aBytes: string | Uint8Array): string {\n  if (aBytes instanceof Uint8Array) return base64_encode(aBytes);\n  return base64_encode_string(aBytes);\n}\n","/**\n * Encoding\n */\nexport const encoding = ['binary', 'octal', 'decimal', 'hexa', 'text'] as const;\nexport type Encoding = (typeof encoding)[number];\n\nfunction is_encoding(encode: Encoding): encode is Encoding {\n  return encoding.includes(encode);\n}\n\nexport function check_encoding(encode: Encoding): void {\n  if (!is_encoding(encode)) throw new Error('Invalid Encoding');\n}\n\n/**\n * Check valid characters\n */\nfunction is_binary(char: string): boolean {\n  const c = char.charAt(0);\n  return c === '0' || c === '1';\n}\n\nfunction is_octal(char: string): boolean {\n  const c = char.charAt(0);\n  return c >= '0' && c <= '7';\n}\n\nfunction is_hexa(char: string): boolean {\n  const c = char.charAt(0);\n  return (\n    (c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F')\n  );\n}\n\nfunction is_decimal(char: string): boolean {\n  const c = char.charAt(0);\n  return c >= '0' && c <= '9';\n}\n\nfunction is_ascii(char: string): boolean {\n  return char.charCodeAt(0) <= 255;\n}\n\nexport function is_ascii_printable(char: string): boolean {\n  return is_ascii_code_printable(char.charCodeAt(0));\n}\n\nexport function is_ascii_code_printable(code: number): boolean {\n  return code >= 32 && code <= 126;\n}\n\n/**\n * Separate function\n * This functions assume that all characters are valid based on the encoding\n */\nfunction split_binary(str: string): string[] {\n  return str.match(/[01]{1,8}/g) ?? [];\n}\n\nfunction split_octal(str: string): string[] {\n  return str.match(/[0-3]?[0-7]{1,2}/g) ?? [];\n}\n\nfunction split_decimal(str: string): string[] {\n  return str.match(/25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2}/g) ?? [];\n}\n\nfunction split_hexa(str: string): string[] {\n  return str.match(/[0-9a-fA-F]{1,2}/g) ?? [];\n}\n\nfunction split_text(str: string): string[] {\n  return str.match(/\\\\x[0-9a-fA-F]{1,2}|\\\\n|\\\\r|\\\\0|\\\\\\\\|[ -~]/g) ?? [];\n}\n\ninterface FormatOptions {\n  pad?: string;\n  separator?: string;\n}\n\ninterface DataTypesInterface {\n  base: number;\n  char_byte_size: number;\n  check_char: (char: string) => boolean;\n  split: (str: string) => string[];\n}\n\n/**\n * Type definitions\n */\nconst dataType: Record<Encoding, DataTypesInterface> = {\n  binary: {\n    base: 2,\n    char_byte_size: 8,\n    check_char: is_binary,\n    split: split_binary,\n  },\n  octal: {\n    base: 8,\n    char_byte_size: 3,\n    check_char: is_octal,\n    split: split_octal,\n  },\n  decimal: {\n    base: 10,\n    char_byte_size: 3,\n    check_char: is_decimal,\n    split: split_decimal,\n  },\n  hexa: {\n    base: 16,\n    char_byte_size: 2,\n    check_char: is_hexa,\n    split: split_hexa,\n  },\n  text: {\n    base: 1,\n    char_byte_size: 1,\n    check_char: is_ascii,\n    split: split_text,\n  },\n};\n\n/**\n * Encoding functions\n */\nexport function is_encode_char(char: string, enc: Encoding): boolean {\n  check_encoding(enc);\n  return dataType[enc].check_char(char);\n}\n\nexport function clear_string(str: string, enc: Encoding): string {\n  check_encoding(enc);\n  return Array.from(str)\n    .filter(c => dataType[enc].check_char(c))\n    .join('');\n}\n\nexport function format(\n  str: string[],\n  encode: Encoding,\n  opt: FormatOptions = {}\n): string {\n  check_encoding(encode);\n  if (encode === 'text') return str.join('');\n\n  const fmt = { ...{ separator: ' ', pad: '' }, ...opt };\n\n  if (fmt.pad.length > 0)\n    str = str.map(v => v.padStart(dataType[encode].char_byte_size, fmt.pad));\n  return str.join(fmt.separator);\n}\n\nexport function split(str: string, encode: Encoding): string[] {\n  check_encoding(encode);\n  return dataType[encode].split(str);\n}\n\nfunction string_to_binary(str: string): Uint8Array {\n  return string_array_to_binary(split_text(str));\n}\n\nfunction string_array_to_binary(str: string[]): Uint8Array {\n  return Uint8Array.from(\n    str.map(c => {\n      switch (c) {\n        case '\\\\n':\n          return 10;\n        case '\\\\r':\n          return 13;\n        case '\\\\0':\n          return 0;\n        case '\\\\\\\\':\n          return 92;\n        default:\n          break;\n      }\n      const cc = c.match(/(?<=\\x)[0-9a-fA-F]{1,2}/g);\n      if (cc !== null && cc.length > 0) {\n        return parseInt(cc[0], 16);\n      }\n      return c.charCodeAt(0);\n    })\n  );\n}\n\nexport function parse(str: string, encode: Encoding): Uint8Array {\n  check_encoding(encode);\n  str = clear_string(str, encode);\n\n  if (encode === 'text') return string_to_binary(str);\n  return Uint8Array.from(\n    dataType[encode]\n      .split(str)\n      .map((s: string) => parseInt(s, dataType[encode].base))\n  );\n}\n\nexport function to_data(str: string[], encode: Encoding): Uint8Array {\n  check_encoding(encode);\n  if (encode === 'text') return string_array_to_binary(str);\n\n  return Uint8Array.from(\n    str.map((s: string) => parseInt(s, dataType[encode].base))\n  );\n}\n\nexport function to_array_string(\n  data: Uint8Array,\n  encode: Encoding,\n  pad: string = ''\n): string[] {\n  check_encoding(encode);\n  if (encode === 'text') return binary_to_ascii_array(data);\n\n  const { base, char_byte_size } = dataType[encode];\n  if (pad.length > 0)\n    return Array.from(data).map(n =>\n      n.toString(base).padStart(char_byte_size, pad)\n    );\n\n  return Array.from(data).map(n => n.toString(base));\n}\n\nexport function convert(\n  input: string[],\n  from: Encoding,\n  to: Encoding\n): string[] {\n  if (from === to) return input;\n  const d = to_data(input, from);\n  return to_array_string(d, to);\n}\n\nexport function is_valid(str: string, encode: Encoding): boolean {\n  return Array.from(str).every(c => is_encode_char(c, encode));\n}\n\nexport type SpecialChars = Record<string, string>;\n\nconst specialChars: SpecialChars = {\n  '\\0': '\\\\0',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\\\': '\\\\\\\\',\n};\n\nexport function string_to_ascii_array(\n  chunk: string,\n  chars: SpecialChars = specialChars\n): string[] {\n  const out: string[] = [];\n  for (const c of chunk) {\n    if (c in chars) {\n      out.push(chars[c]);\n      continue;\n    }\n\n    if (!is_ascii_printable(c)) {\n      out.push('\\\\x' + c.charCodeAt(0).toString(16).padStart(2, '0'));\n    } else out.push(c);\n  }\n  return out;\n}\n\nexport function string_to_ascii(\n  chunk: string,\n  chars: SpecialChars = specialChars\n): string {\n  return string_to_ascii_array(chunk, chars).join('');\n}\n\nexport function binary_to_ascii_array(\n  chunk: Uint8Array,\n  chars: SpecialChars = specialChars\n): string[] {\n  const out: string[] = [];\n  for (const code of chunk) {\n    const c = String.fromCharCode(code);\n    if (c in chars) {\n      out.push(chars[c]);\n      continue;\n    }\n\n    if (!is_ascii_code_printable(code)) {\n      out.push('\\\\x' + code.toString(16).padStart(2, '0'));\n    } else out.push(c);\n  }\n  return out;\n}\n\nexport function binary_to_ascii(\n  chunk: Uint8Array,\n  chars: SpecialChars = specialChars\n): string {\n  return binary_to_ascii_array(chunk, chars).join('');\n}\n","const template = (function () {\n  const template = document.createElement('template');\n  template.innerHTML = `\n  <style>\n    :host {\n      position: absolute;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      box-sizing: border-box;\n      background-color: lightgreen;\n      padding: 5px;\n      border-radius: 10px;\n      min-width: 200px;\n      top: 5px;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n\n    #message {\n      text-align: center;\n      width: 100%;\n      display: inline-block;\n    }\n\n    #close {\n      cursor: pointer;\n    }\n\n    #close:hover {\n      background-color: black;\n      color: white;\n    }\n  </style>\n  <slot id=message></slot>\n  <span id=close>&#10006;</span>`;\n  return template;\n})();\n\nexport class AlertMessage extends HTMLElement {\n  constructor(message: string = '') {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot?.appendChild(template.content.cloneNode(true));\n\n    if (message.length > 0)\n      (this.shadowRoot?.querySelector('#message') as HTMLElement).textContent =\n        message;\n\n    this.shadowRoot?.querySelector('#close')?.addEventListener('click', () => {\n      this.close();\n    });\n  }\n\n  public close(): void {\n    this.parentNode?.removeChild(this);\n  }\n}\n\ncustomElements.define('fade-message', AlertMessage);\n","import {\n  is_ascii_code_printable,\n  to_array_string,\n  type Encoding,\n} from '../../libs/binary-dump';\n\nconst template = (function () {\n  const template = document.createElement('template');\n  template.innerHTML = `\n    <style>\n      :host {\n        width: fit-content;\n        overflow: hidden;\n        display: grid;\n        grid-template: \". . . . . .\"\n      }\n      \n      .field {\n        padding: 4px;\n        margin: 0px;\n      }\n\n      #line-count {\n        background-color: white;\n      }\n\n      #decimal {\n        background-color: yellow;\n      }\n      \n      #hexa {\n        background-color: blue;\n      }\n\n      #text {\n        background-color: red;\n      }\n\n      #binary {\n        background-color: grey;\n      }\n\n      #octal {\n        background-color: green;\n      }\n\n      .hovered {\n        background-color: blueviolet;\n        font-weight: bold;\n        border-radius: 8px;\n      }\n      \n      .selected {\n        background-color: coral;\n        font-weight: bold;\n        border-radius: 8px;\n      }\n      \n      #decimal span[data-value],\n      #octal span[data-value],\n      #hexa span[data-value],\n      #binary span[data-value] {\n        padding: 2px 4px;\n      }\n    </style>\n    <pre id=\"line-count\" class=\"field\"></pre>\n    <pre id=\"binary\" class=\"field\"></pre>\n    <pre id=\"octal\" class=\"field\"></pre>\n    <pre id=\"decimal\" class=\"field\"></pre>\n    <pre id=\"hexa\" class=\"field\"></pre>\n    <pre id=\"text\" class=\"field\"></pre>`;\n  return template;\n})();\n\nexport class BinaryDump extends HTMLElement {\n  private readonly _decimal: HTMLPreElement;\n  private readonly _hexa: HTMLPreElement;\n  private readonly _octal: HTMLPreElement;\n  private readonly _binary: HTMLPreElement;\n  private readonly _text: HTMLPreElement;\n  private readonly _lc: HTMLPreElement;\n\n  private _bl: number;\n\n  private readonly _hide: Set<Encoding>;\n\n  constructor(\n    bl: number = 16,\n    data?: Uint8Array,\n    option?: { hide: Encoding[] }\n  ) {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot?.appendChild(template.content.cloneNode(true));\n\n    this._hide = new Set<Encoding>(option?.hide);\n\n    this._binary = this.shadowRoot?.querySelector('#binary') as HTMLPreElement;\n    this._octal = this.shadowRoot?.querySelector('#octal') as HTMLPreElement;\n    this._decimal = this.shadowRoot?.querySelector(\n      '#decimal'\n    ) as HTMLPreElement;\n    this._hexa = this.shadowRoot?.querySelector('#hexa') as HTMLPreElement;\n    this._text = this.shadowRoot?.querySelector('#text') as HTMLPreElement;\n    this._lc = this.shadowRoot?.querySelector('#line-count') as HTMLPreElement;\n\n    this._bl = bl;\n\n    this.shadowRoot?.addEventListener('mouseover', ev => {\n      const el = ev.target as HTMLElement;\n      if ('value' in el.dataset) {\n        this.shadowRoot\n          ?.querySelectorAll(`[data-value='${el.dataset.value}']`) // eslint-disable-line\n          .forEach(e => {\n            e.classList.add('hovered');\n          });\n        this.shadowRoot\n          ?.querySelectorAll(`[data-idx='${el.dataset.idx}']`) // eslint-disable-line\n          .forEach(e => {\n            e.classList.add('selected');\n          });\n      }\n    });\n\n    this.shadowRoot?.addEventListener('mouseout', ev => {\n      const el = ev.target as HTMLElement;\n      if ('value' in el.dataset) {\n        this.shadowRoot\n          ?.querySelectorAll(`[data-value='${el.dataset.value}']`) // eslint-disable-line\n          .forEach(e => {\n            e.classList.remove('hovered');\n          });\n        this.shadowRoot\n          ?.querySelectorAll(`[data-idx='${el.dataset.idx}']`) // eslint-disable-line\n          .forEach(e => {\n            e.classList.remove('selected');\n          });\n      }\n    });\n\n    if (data !== undefined) this.update(data);\n\n    this.set_hide();\n  }\n\n  connectedCallback(): void {\n    if (this.hasAttribute('hide'))\n      this.hide(...(this.getAttribute('hide')?.split(',') as Encoding[]));\n  }\n\n  attributeChangedCallback(attr: string, oldVal: string, newVal: string): void {\n    if (oldVal === newVal) return;\n    this._hide.clear();\n    this.hide(...(newVal.split(',') as Encoding[]));\n  }\n\n  static get observedAttributes(): string[] {\n    return ['hide'];\n  }\n\n  hide(...args: Encoding[]): void {\n    let changed: boolean = false;\n    args.forEach((s: Encoding) => {\n      if (this.is_encoding(s) && !this._hide.has(s)) {\n        changed = true;\n        this._hide.add(s);\n      }\n    });\n\n    if (changed) this.set_hide();\n  }\n\n  show(...args: Encoding[]): void {\n    let changed: boolean = false;\n    args.forEach((s: Encoding) => {\n      if (this.is_encoding(s) && this._hide.has(s)) {\n        changed = true;\n        this._hide.delete(s);\n      }\n    });\n\n    if (changed) this.set_hide();\n  }\n\n  is_hidden(encode: Encoding): boolean {\n    return this._hide.has(encode);\n  }\n\n  public update(data: Uint8Array, bl: number = this._bl): void {\n    this._bl = bl;\n\n    [\n      [this._binary, 'binary'],\n      [this._decimal, 'decimal'],\n      [this._octal, 'octal'],\n      [this._hexa, 'hexa'],\n    ].forEach(v => {\n      this.append_elements(\n        v[0] as HTMLElement,\n        break_line_array(\n          to_binary_array_element(\n            data,\n            to_array_string(data, v[1] as Encoding, '0')\n          ),\n          this._bl\n        )\n      );\n    });\n    this.append_elements(\n      this._text,\n      break_line_array(\n        to_binary_array_element(data, binary_to_ascii(data)),\n        this._bl\n      )\n    );\n    create_break_line_field(this._lc, data.length, this._bl);\n  }\n\n  private append_elements(\n    container: HTMLElement,\n    elements: HTMLSpanElement[]\n  ): void {\n    container.innerHTML = '';\n    elements.forEach(el => container.appendChild(el));\n  }\n\n  private is_encoding(encode: Encoding): boolean {\n    return ['binary', 'octal', 'decimal', 'hexa', 'text'].includes(encode);\n  }\n\n  private set_hide(): void {\n    const new_value: Encoding[] = [];\n    [\n      [this._binary, 'binary'],\n      [this._decimal, 'decimal'],\n      [this._hexa, 'hexa'],\n      [this._octal, 'octal'],\n      [this._text, 'text'],\n    ].forEach(v => {\n      if (this._hide.has(v[1] as Encoding)) {\n        (v[0] as HTMLElement).style.display = 'none';\n        new_value.push(v[1] as Encoding);\n      } else (v[0] as HTMLElement).style.display = 'inline-block';\n    });\n    this.setAttribute('hide', new_value.join(','));\n  }\n}\n\ncustomElements.define('binary-dump', BinaryDump);\n\n/**\n * Free functions\n */\n\nfunction binary_to_ascii(data: Uint8Array): string[] {\n  return data.reduce<string[]>((acc, v) => {\n    acc.push(!is_ascii_code_printable(v) ? '.' : String.fromCharCode(v));\n    return acc;\n  }, []);\n}\n\nfunction to_binary_array_element(\n  data: Uint8Array,\n  value: string[]\n): HTMLSpanElement[] {\n  const out: HTMLSpanElement[] = [];\n  data.forEach((v, i) => {\n    const s = document.createElement('span');\n    s.dataset.value = v.toString(10);\n    s.dataset.idx = i.toString(10);\n    s.textContent = value[i];\n    out.push(s);\n  });\n  return out;\n}\n\nfunction break_line_array(\n  els: HTMLSpanElement[],\n  br: number\n): HTMLSpanElement[] {\n  /**\n   * TODO: Add a assert that BR must be positive integer\n   */\n  return els.reduce<HTMLSpanElement[]>((acc, v, idx) => {\n    if (idx !== 0 && idx % br === 0) acc.push(document.createElement('br'));\n    acc.push(v);\n    return acc;\n  }, []);\n}\n\nfunction create_break_line_field(\n  el: HTMLElement,\n  lines: number,\n  br: number\n): void {\n  el.innerHTML = '';\n  let i = 0;\n  while (true) {\n    const span = document.createElement('span');\n    span.textContent = i.toString(16).padStart(4, '0');\n    el.appendChild(span);\n    i += br;\n    if (i >= lines) break;\n    el.appendChild(document.createElement('br'));\n  }\n}\n","import {\n  type Encoding,\n  is_encode_char,\n  split,\n  format,\n  convert,\n  to_data,\n  check_encoding,\n  to_array_string,\n} from '../../libs/binary-dump';\n\nconst template = (function () {\n  const template = document.createElement('template');\n  template.innerHTML = `\n  <style>\n    :host {\n      display: inline-block;\n    }\n    \n    input {\n      width: 100%;\n      box-sizing: border-box;\n    }\n  </style>\n  <input>`;\n  return template;\n})();\n\nexport class BinaryInput extends HTMLElement {\n  private _encode: Encoding = 'hexa';\n  private readonly _input: HTMLInputElement;\n\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot?.appendChild(template.content.cloneNode(true));\n    this._input = this.shadowRoot?.querySelector('input') as HTMLInputElement;\n\n    this._input.onkeydown = ev => {\n      if (ev.ctrlKey) return;\n      if (['Backspace', 'Delete', 'Tab', 'Home', 'End'].includes(ev.key))\n        return;\n      if (ev.key.startsWith('Arrow')) return;\n      if (ev.key === 'Escape') {\n        this.clear();\n        return;\n      }\n      if (!is_encode_char(ev.key, this._encode)) ev.preventDefault();\n    };\n\n    this._input.onkeyup = ev => {\n      const position = this._input.selectionStart;\n      this.format(this._input.value);\n      if (['Delete'].includes(ev.key)) this._input.selectionEnd = position;\n    };\n\n    this._input.onpaste = ev => {\n      ev.preventDefault();\n      this.format(ev.clipboardData?.getData('text') ?? '');\n    };\n  }\n\n  static get observedAttributes(): string[] {\n    return ['placeholder', 'disabled'];\n  }\n\n  connectedCallback(): void {\n    if (this.hasAttribute('placeholder')) {\n      this._input.placeholder = this.getAttribute('placeholder') as string;\n    }\n\n    this._input.disabled = this.hasAttribute('disabled');\n  }\n\n  set placeholder(name: string) {\n    this._input.placeholder = name;\n    this.setAttribute('placeholder', name);\n  }\n\n  get placeholder(): string {\n    return this._input.placeholder;\n  }\n\n  get disabled(): boolean {\n    return this._input.disabled;\n  }\n\n  set disabled(disable: boolean) {\n    this._input.disabled = disable;\n    if (disable) this.setAttribute('disabled', 'true');\n    else this.removeAttribute('disabled');\n  }\n\n  public override focus(): void {\n    this._input.focus();\n  }\n\n  attributeChangedCallback(attr: string, oldVal: string, newVal: string): void {\n    if (oldVal === newVal) return;\n    switch (attr) {\n      case 'placeholder':\n        this.placeholder = newVal;\n        break;\n      case 'disabled':\n        this.disabled = newVal !== null;\n        break;\n    }\n  }\n\n  get value(): string {\n    return this._input.value;\n  }\n\n  get data(): Uint8Array {\n    return to_data(split(this.value, this._encode), this._encode);\n  }\n\n  set data(d: Uint8Array) {\n    this._input.value = format(to_array_string(d, this._encode), this._encode, {\n      separator: ' ',\n      pad: '0',\n    });\n  }\n\n  set encode(enc: Encoding) {\n    check_encoding(enc);\n    if (enc === this._encode) return;\n    this._input.value = format(\n      convert(split(this.value, this._encode), this._encode, enc),\n      enc,\n      { separator: ' ', pad: '0' }\n    );\n\n    this._encode = enc;\n  }\n\n  get encode(): Encoding {\n    return this._encode;\n  }\n\n  public clear(): void {\n    this._input.value = '';\n  }\n\n  private format(str: string): void {\n    this._input.value = format(split(str, this._encode), this._encode);\n  }\n}\n\ncustomElements.define('text-binary', BinaryInput);\n","import { type Encoding, encoding } from '../../libs/binary-dump';\nimport type { BinaryInput } from './text-binary';\n\nconst template = (function () {\n  const template = document.createElement('template');\n  template.innerHTML = `\n  <style>\n  :host {\n    display: inline-block;\n  }\n  </style>\n  <text-binary id=data></text-binary>\n  <select id=encode></select>`;\n\n  return template;\n})();\n\ninterface BinaryInputSelectOptions {\n  selected?: Encoding;\n}\n\nexport class BinaryInputSelect extends HTMLElement {\n  private readonly _data: BinaryInput;\n  private readonly _select: HTMLSelectElement;\n\n  constructor(options: BinaryInputSelectOptions = {}) {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot?.appendChild(template.content.cloneNode(true));\n\n    this._data = this.shadowRoot?.querySelector('#data') as BinaryInput;\n    this._select = this.shadowRoot?.querySelector(\n      '#encode'\n    ) as HTMLSelectElement;\n    encoding.forEach(enc => {\n      this._select.appendChild(\n        new Option(enc, enc, false, options?.selected === enc)\n      );\n    });\n\n    this.encode = options?.selected ?? (this._select.value as Encoding);\n    this._select.onchange = ev => {\n      this.encode = this._select.value as Encoding;\n    };\n  }\n\n  static get observedAttributes(): string[] {\n    return ['selected', 'placeholder', 'disabled'];\n  }\n\n  connectedCallback(): void {\n    if (this.hasAttribute('selected')) {\n      this.encode = this.getAttribute('selected') as Encoding;\n    }\n    if (this.hasAttribute('placeholder')) {\n      this._data.placeholder = this.getAttribute('placeholder') as string;\n    }\n    this.disabled = this.hasAttribute('disabled');\n  }\n\n  attributeChangedCallback(attr: string, oldVal: string, newVal: string): void {\n    if (oldVal === newVal) return;\n    switch (attr) {\n      case 'selected':\n        this.encode = newVal as Encoding;\n        break;\n      case 'placeholder':\n        this.placeholder = newVal;\n        break;\n      case 'disabled':\n        this.disabled = newVal !== null;\n        break;\n    }\n  }\n\n  get value(): string {\n    return this._data.value;\n  }\n\n  get data(): Uint8Array {\n    return this._data.data;\n  }\n\n  set encode(enc: Encoding) {\n    if (!encoding.includes(enc)) return;\n    this._data.encode = enc;\n    this._select.value = enc;\n    this.setAttribute('selected', enc);\n  }\n\n  get encode(): Encoding {\n    return this._data.encode;\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n\n  set placeholder(name: string) {\n    this._data.placeholder = name;\n    this.setAttribute('placeholder', name);\n  }\n\n  get placeholder(): string {\n    return this._data.placeholder;\n  }\n\n  get disabled(): boolean {\n    return this._data.disabled;\n  }\n\n  set disabled(disable: boolean) {\n    this._data.disabled = disable;\n    this._select.disabled = disable;\n    if (disable) this.setAttribute('disabled', 'true');\n    else this.removeAttribute('disabled');\n  }\n\n  public override focus(): void {\n    this._data.focus();\n  }\n}\n\ncustomElements.define('text-select-binary', BinaryInputSelect);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","import './input.css';\nimport '../../css/window.css';\n\nimport '../../ts/web-components/binary-dump/binary-dump';\nimport '../../ts/web-components/binary-input/text-binary';\nimport '../../ts/web-components/binary-input/text-select-binary';\n\nimport { BinaryDump } from '../../ts/web-components/binary-dump/binary-dump';\nimport { BinaryInput } from '../../ts/web-components/binary-input/text-binary';\nimport { encoding, type Encoding } from '../../ts/libs/binary-dump';\nimport { base64_decode, base64_encode } from '../../ts/libs/base64';\nimport { AlertMessage } from '../../ts/web-components/alert-message/alert-message';\nimport { fade_out } from '../../ts/helper/fade';\n\nimport { open_db, write_db, read_db } from './db';\n\nconst bl = document.querySelector('#breakline') as HTMLInputElement;\nconst bd = document.querySelector('#data-dump') as BinaryDump;\nconst input_binary = document.querySelector('#input-binary') as BinaryInput;\ninput_binary.encode = 'text';\nlet db: IDBDatabase | undefined;\n\nopen_db()\n  .then(mdb => {\n    db = mdb;\n    read().then(() => {\n      init();\n    });\n  })\n  .catch(err => {\n    console.log('error', err);\n  });\n\nfunction init() {\n  read_link();\n\n  bl.onchange = () => update();\n  input_binary.onkeyup = () => update();\n  document.querySelectorAll('input[name=encode]').forEach(v => {\n    const i = v as HTMLInputElement;\n    i.onclick = () => {\n      input_binary.encode = i.value as Encoding;\n      update();\n    };\n  });\n\n  document.querySelectorAll('input[name=binary-hide]').forEach(v => {\n    const i = v as HTMLInputElement;\n    i.onclick = () => {\n      if (i.checked) bd.hide(i.value as Encoding);\n      else bd.show(i.value as Encoding);\n      window.history.replaceState('state', '', make_link(false));\n      write();\n    };\n\n    if (bd.is_hidden(i.value as Encoding)) i.checked = true;\n  });\n\n  document.querySelector('#share')?.addEventListener('click', () => {\n    navigator.clipboard.writeText(make_link());\n\n    const el = new AlertMessage('Link copied');\n    document.body.appendChild(el);\n    fade_out(el).then(el => el.close());\n  });\n}\n\nfunction update() {\n  bd.update(input_binary.data, +bl.value);\n  window.history.replaceState('state', '', make_link(false));\n  write();\n}\n\nfunction make_link(fulllink = true): string {\n  let link = `${fulllink ? window.location.origin : ''}${\n    window.location.pathname\n  }?encode=${input_binary.encode}&bl=${+bl.value}`;\n\n  const hide: string[] = [];\n  encoding.forEach(e => {\n    if (bd.is_hidden(e)) hide.push(e);\n  });\n  if (hide.length > 0) link += `&hide=${hide.join(',')}`;\n  const data = input_binary.data;\n  if (data.length > 0) link += `&data=${base64_encode(data)}`;\n\n  return link;\n}\n\nfunction read_link(): void {\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value, key) => {\n    switch (key) {\n      case 'bl':\n        bl.value = value;\n        break;\n      case 'data':\n        input_binary.data = base64_decode(value);\n        break;\n      case 'hide':\n        bd.hide(...(value.split(',') as Encoding[]));\n        set_hide();\n        break;\n      case 'encode':\n        input_binary.encode = value as Encoding;\n        break;\n    }\n  });\n  set_encode();\n  update();\n}\n\nfunction write(): Promise<void> {\n  if (db === undefined) return Promise.resolve();\n  return write_db(db, {\n    breakline: +bl.value,\n    data: input_binary.data,\n    hide: encoding.reduce<Encoding[]>((acc, v) => {\n      if (bd.is_hidden(v)) acc.push(v);\n      return acc;\n    }, []),\n    encode: input_binary.encode,\n  });\n}\n\nfunction read(): Promise<void> {\n  if (db === undefined) return Promise.resolve();\n  return read_db(db).then(data => {\n    if (data === undefined) return;\n    bl.value = data.breakline.toString();\n    input_binary.encode = data.encode;\n    bd.hide(...data.hide);\n    input_binary.data = data.data;\n    set_hide();\n    set_encode();\n    update();\n  });\n}\n\nfunction set_hide() {\n  document.querySelectorAll('input[name=binary-hide]').forEach(v => {\n    const i = v as HTMLInputElement;\n    i.checked = bd.is_hidden(i.value as Encoding);\n  });\n}\n\nfunction set_encode() {\n  document.querySelectorAll('input[name=encode]').forEach(v => {\n    const i = v as HTMLInputElement;\n    i.checked = i.value === input_binary.encode;\n  });\n}\n\n/**\n *\n */\n// import { BinaryInputSelect } from '../../ts/web-components/binary-input/text-select-binary';\n// const input_select = document.querySelector(\n//   '#data-input-select'\n// ) as BinaryInputSelect;\n// const dump2 = document.querySelector('#data-dump-select') as BinaryDump;\n\n// input_select.onkeyup = () => update2();\n// input_select.onchange = () => update2();\n\n// function update2() {\n//   dump2.update(input_select.data, +bl.value);\n// }\n"],"names":[],"sourceRoot":""}